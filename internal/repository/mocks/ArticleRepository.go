// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	domain "chat-apps/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// ArticleRepository is an autogenerated mock type for the ArticleRepository type
type ArticleRepository struct {
	mock.Mock
}

// GetArticleList provides a mock function with given fields: search
func (_m *ArticleRepository) GetArticleList(search string) ([]domain.ArticleList, error) {
	ret := _m.Called(search)

	if len(ret) == 0 {
		panic("no return value specified for GetArticleList")
	}

	var r0 []domain.ArticleList
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]domain.ArticleList, error)); ok {
		return rf(search)
	}
	if rf, ok := ret.Get(0).(func(string) []domain.ArticleList); ok {
		r0 = rf(search)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.ArticleList)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(search)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewArticleRepository creates a new instance of ArticleRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewArticleRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ArticleRepository {
	mock := &ArticleRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
